<!--     1         2         3         4         5         6         7         8
 | 45678901234567890123456789012345678901234567890123456789012345678901234567890
 |
 | Common.Controls: Common library xaml, TextBox Hints/Placeholders, v.0.0.1
 |    Johnathan Graham McKnight <akoimeexx@gmail.com>
 |
 |
 | Copyright (c) 2016, Johnathan Graham McKnight
 | All rights reserved.
 |
 | Redistribution and use in source and binary forms, with or without
 | modification, are permitted provided that the following conditions are met:
 |
 | 1. Redistributions of source code must retain the above copyright notice,
 | this list of conditions and the following disclaimer.
 |
 | 2. Redistributions in binary form must reproduce the above copyright notice,
 | this list of conditions and the following disclaimer in the documentation
 | and/or other materials provided with the distribution.
 |
 | 3. Neither the name of the copyright holder nor the names of its contributors
 | may be used to endorse or promote products derived from this software without
 | specific prior written permission.
 |
 | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 | AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 | IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 | ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 | LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 | CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 | SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 | INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 | CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 | ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 | POSSIBILITY OF SUCH DAMAGE.
 \-->
 <ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="Tlockbox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static 
            SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static 
            SystemColors.ControlBrushKey }}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static 
            SystemColors.InactiveBorderBrushKey }}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static 
            SystemColors.ControlTextBrushKey }}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" 
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            HorizontalAlignment="{TemplateBinding 
                                HorizontalContentAlignment}" Margin="1" 
                            VerticalAlignment="{TemplateBinding 
                                VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Canvas x:Name="optionLock" Width="24" 
                                Height="24">
                                    <Path x:Name="shackle" Canvas.Left="5" 
                                        Canvas.Top="0" Fill="{TemplateBinding 
                                            Foreground}" Stretch="Uniform" 
                                            Data="F0M0,0A7,7 0 0 1 14,0Z
                                                m4,0a3,3 0 0 1 6,0Z
                                                M0,0v13h4v-13ZM10,0v1h4v-1Z" />
                                    <Path x:Name="tumbler" Canvas.Left="3" 
                                        Canvas.Bottom="0" Fill="{TemplateBinding
                                            Foreground}" Stretch="Uniform" 
                                            Data="F0M0,2L0,11 1,13 17,13 18,11 
                                                18,2 17,0 1,0Z
                                                m8,5a3,3 0 1 1 2,0Z
                                                m0,0l-0.75,4.5h3.5l-0.65,-4.5Z "
                                    />
                                </Canvas>
                                <Rectangle x:Name="indeterminateMark" 
                                    Fill="{TemplateBinding Foreground}" 
                                    Margin="2" Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                            Grid.Column="1" Focusable="False" 
                            HorizontalAlignment="{TemplateBinding 
                                HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding 
                                SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding 
                                VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Canvas.Top" TargetName="shackle" 
                                Value="3" />
                            <Setter Property="Opacity" TargetName="optionLock" 
                                Value="1" />
                            <Setter Property="Opacity" 
                                TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Canvas.Top" TargetName="shackle" 
                                Value="0" />
                            <Setter Property="Opacity" TargetName="optionLock" 
                                Value="0" />
                            <Setter Property="Opacity" 
                                TargetName="indeterminateMark" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
