<!--     1         2         3         4         5         6         7         8
 | 45678901234567890123456789012345678901234567890123456789012345678901234567890
 | 
 | WARNING! DEPRECATED.
 | 
 | Common.Controls: Common library xaml, TextBox Hints/Placeholders, v.0.0.1
 |    Johnathan Graham McKnight <akoimeexx@gmail.com>
 |
 |
 | Copyright (c) 2016, Johnathan Graham McKnight
 | All rights reserved.
 |
 | Redistribution and use in source and binary forms, with or without
 | modification, are permitted provided that the following conditions are met:
 |
 | 1. Redistributions of source code must retain the above copyright notice,
 | this list of conditions and the following disclaimer.
 |
 | 2. Redistributions in binary form must reproduce the above copyright notice,
 | this list of conditions and the following disclaimer in the documentation
 | and/or other materials provided with the distribution.
 |
 | 3. Neither the name of the copyright holder nor the names of its contributors
 | may be used to endorse or promote products derived from this software without
 | specific prior written permission.
 |
 | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 | AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 | IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 | ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 | LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 | CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 | SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 | INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 | CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 | ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 | POSSIBILITY OF SUCH DAMAGE.
 \-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Common.Converters">

    <conv:AlignmentToAlignmentConverter x:Key="AlignmentToAlignment" />
<!--
    http://stackoverflow.com/questions/30670911/bind-width-of-a-textbox-inside-visualbrush
-->
    <VisualBrush x:Key="HintingBackgroundBrush" TileMode="Tile" Stretch="None" 
        AlignmentX="Left" AlignmentY="Center">
        <VisualBrush.Visual>
            <Label Background="{x:Static SystemColors.WindowBrush }"  
                Foreground="{x:Static SystemColors.GrayTextBrush }" 
                FontStyle="Oblique" Content="{Binding Path=Tag, 
                    RelativeSource={RelativeSource 
                        Mode=FindAncestor, AncestorType={x:Type TextBox}}, 
                    FallbackValue=Empty}" 
                HorizontalContentAlignment="{Binding 
                    Path=HorizontalContentAlignment, 
                    RelativeSource={RelativeSource 
                        Mode=FindAncestor, AncestorType={x:Type TextBox}}, 
                    FallbackValue=Left}" 
                VerticalContentAlignment="{Binding 
                    Path=VerticalContentAlignment, 
                    RelativeSource={RelativeSource 
                        Mode=FindAncestor, AncestorType={x:Type TextBox}}, 
                    FallbackValue=Center}" 
                Height="{Binding 
                    Path=ActualHeight, 
                    RelativeSource={RelativeSource 
                        Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                Width="{Binding 
                    Path=ActualWidth, 
                    RelativeSource={RelativeSource 
                        Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                Margin="0" Padding="1"
            />
                <!--<Label.Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Text.IsEmpty, 
                RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Background" 
                    Value="{StaticResource HintingBackgroundBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Label.Style>
            </Label>-->
        </VisualBrush.Visual>
    </VisualBrush>
    <Style x:Key="TextBoxEmptyHint" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Text.IsEmpty, 
                RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" 
                    Value="{StaticResource HintingBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxPathHint" TargetType="{x:Type TextBox}">
        <Setter Property="Background">
            <Setter.Value>
                <VisualBrush AlignmentX="Right" AlignmentY="Center" 
                Stretch="None">
                    <VisualBrush.Visual>
                        <Label Background="{x:Static SystemColors.WindowBrush }"
                        Content="C:\path\to\resource, /path/to/resource" 
                        FontStyle="Oblique" 
                        Foreground="{x:Static SystemColors.GrayTextBrush }" />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Text.IsEmpty, 
                RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Background" 
                    Value="{x:Static SystemColors.WindowBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxSearchHint" TargetType="{x:Type TextBox}">
        <Setter Property="Background">
            <Setter.Value>
                <VisualBrush AlignmentX="{Binding 
                    Path=HorizontalContentAlignment, 
                    RelativeSource={RelativeSource TemplatedParent}, 
                    Converter={StaticResource AlignmentToAlignment}}" 
                AlignmentY="{Binding Path=VerticalContentAlignment, 
                    RelativeSource={RelativeSource TemplatedParent}, 
                    Converter={StaticResource AlignmentToAlignment}}" 
                Stretch="None">
                    <VisualBrush.Visual>
                        <Label Content="Search..." FontStyle="Oblique" 
                            Foreground="{x:Static SystemColors.GrayTextBrush }" 
                        />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Text.IsEmpty, 
                RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Background" 
                    Value="{x:Static SystemColors.WindowBrush }" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
